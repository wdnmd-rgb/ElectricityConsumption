<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.UserDao">

    <resultMap type="com.entity.User" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="createdate" column="createDate" jdbcType="TIMESTAMP"/>
        <result property="area" column="area" jdbcType="VARCHAR"></result>
        <result property="roleName" column="role_name" jdbcType="VARCHAR"></result>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select
          id, username, name, password, status, createDate,area
        from elecon.user
        where id = #{id}
    </select>
    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserMap">
        select
          id, username, name, password, status, createDate,area
        from elecon.user
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="UserMap">
        select a.id,a.name,a.username,a.name,a.password,a.status,a.createDate,a.area,c.remark role_name
        FROM elecon.user a JOIN  elecon.user_role b on a.id=b.user_id
        JOIN elecon.role c ON b.role_id=c.id
        <where>
            <if test="id != null">
                and a.id = #{id}
            </if>
            <if test="username != null and username != ''">
                and a.username = #{username}
            </if>
            <if test="name != null and name != ''">
                and a.name = #{name}
            </if>
            <if test="password != null and password != ''">
                and a.password = #{password}
            </if>
            <if test="status != null">
                and a.status = #{status}
            </if>
            <if test="createdate != null">
                and a.createDate = #{createdate}
            </if>
            <if test="area != null">
                and a.area = #{area}
            </if>
        </where>
    </select>


    <select id="selectNum" resultType="java.lang.Integer">
        select
        count(*)
        from elecon.user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="createdate != null">
                and createDate = #{createdate}
            </if>
            <if test="area != null">
                and area = #{area}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into elecon.user(username, name, password, status, createDate,area)
        values (#{username}, #{name}, #{password}, #{status}, #{createdate})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into elecon.user(username, name, password, status, createDate,area)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.username}, #{entity.name}, #{entity.password}, #{entity.status}, #{entity.createdate})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into elecon.user(username, name, password, status, createDate,area)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.username}, #{entity.name}, #{entity.password}, #{entity.status}, #{entity.createdate})
        </foreach>
        on duplicate key update
        username = values(username) , name = values(name) , password = values(password) , status = values(status) ,
        createDate = values(createDate)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update elecon.user
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="createdate != null">
                createDate = #{createdate},
            </if>
            <if test="area != null">
                and area = #{area}
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from elecon.user where id = #{id}
    </delete>

    <delete id="deleteUserRole">
        delete from ele_con.user_role where user_id = #{id}
    </delete>
    <select id="queryByUserName" resultMap="UserMap">
        select * from elecon.user where username = #{username};
    </select>
    <select id="queryRoleNamesByUserName" resultType="java.lang.String">
        select name from elecon.role where id in
        (select role_id from elecon.user_role where user_id =
        (select id from elecon.user where username = #{username}))
    </select>
    <select id="queryPermsNamesByUserName" resultType="java.lang.String">
        select p.name from permission p
        inner join role_perms rp on p.id = rp.perm_id
        inner join role r on rp.role_id = r.id
        inner join user_role ur on r.id= ur.role_id
        inner join user u on ur.user_id = u.id
        where u.username = #{username}
    </select>

</mapper>